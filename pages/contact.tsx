/* eslint-disable @next/next/no-img-element */
import Button from "@/components/reusable-ui/Button";
import PagesTitle from "@/components/reusable-ui/PagesTitle";
import SectionTitle from "@/components/reusable-ui/SectionTitle";
import { client, urlFor } from "@/lib/sanity.client";
import styles from "@/styles";
import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import contactImg from "../assets/contact.png";
import { motion, AnimatePresence } from "framer-motion";
import { sectionPageAnimate } from "@/animation/animation";
export default function Contact({ advices }: any) {
  console.log(advices);

  let maxIndex = advices.length;
  const [index, setIndex] = useState(0);

  useEffect(() => {
    const timer = setTimeout(() => {
      if (index < maxIndex - 1) {
        setIndex(index + 1);
      }
      if (index === maxIndex - 1) {
        setIndex(0);
      }
    }, 8000);
    return () => clearTimeout(timer);
  }, [index, maxIndex]);

  return (
    <>
      <Head>
        <title>Workshop By A | Contact</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <motion.section
        initial={sectionPageAnimate.initial}
        animate={sectionPageAnimate.animate}
        variants={sectionPageAnimate}
        className={`${styles.paddingX} ${styles.marginX} ${styles.boxWidth} relative flex items-center flex-col pt-[40px]`}
      >
        <PagesTitle label="CONTACT" />
        <div
          className={`w-[100%] flex items-start justify-center min-h-[350px] mb-10`}
        >
          <div className="flex w-[400px] h-[auto]">
            <Image
              key={index}
              src={urlFor(advices[index].mainImage.asset._ref).url()}
              alt={advices[index].alt}
              width={400}
              height={200}
              className="animate-slideShow h-fit "
            />
          </div>
        </div>

        <div className="flex w-[100%] bg-secondary pt-20 pb-10 px-10 relative">
          <form
            action=""
            className="sm:w-[60%] w-[100%] sm:items-start items-center flex flex-col gap-[40px] "
          >
            <div className="sm:w-[100%] ss:flex-row flex-col w-[100%] flex gap-[40px]">
              <input
                type="text"
                name="name"
                id="name"
                placeholder="Nom"
                required
                className={`${styles.text} ${styles.input} sm:w-6/12  w-[100%] py-2 px-4 `}
              />
              <input
                type="email"
                name="email"
                id="email"
                placeholder="Email"
                required
                className={`${styles.text} ${styles.input} sm:w-6/12 w-[100%]  py-2 px-4 `}
              />
            </div>

            <textarea
              name="message"
              id="message"
              placeholder="Message"
              rows={1}
              className={`${styles.text} ${styles.input} w-[100%] py-2 px-4 `}
            ></textarea>
            <Button label="Envoyez" route="" />
          </form>

          <div className="w-6/12 relative">
            <Image
              src={contactImg}
              alt="alizeeplazen"
              className="w-[90%] absolute sm:block hidden right-[-10%] bottom-[0%]"
            />
          </div>
        </div>
      </motion.section>
    </>
  );
}
export const getServerSideProps = async () => {
  const query = '*[_type == "advices"]';
  const advices = await client.fetch(query);

  return {
    props: { advices },
  };
};
